// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String         @id @default(uuid())
  username      String         @unique
  passwordHash  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  // Relations
  messages      ChatMessage[]
  chatRooms     Chat[]         @relation("ChatParticipants")
  gameSaves     GameSaveData[]
  proxiedUrls   ProxiedUrl[]
}

// Chat room model
model Chat {
  id          String        @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  // Relations
  messages    ChatMessage[]
  participants User[]       @relation("ChatParticipants")
}

// Chat message model
model ChatMessage {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  
  // Relations
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Game save data model
model GameSaveData {
  id        String   @id @default(uuid())
  gameId    String   // Identifier for the game
  saveData  String   // JSON string with game save data
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Proxy URL tracking model
model ProxiedUrl {
  id        String   @id @default(uuid())
  url       String
  timestamp DateTime @default(now())
  
  // Relations
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
} 